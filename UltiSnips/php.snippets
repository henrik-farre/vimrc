extends html

snippet php
<?php
${1}
?>
endsnippet

snippet ec
echo "${1:string}"${2};
endsnippet

snippet inc
include '${1:file}';${2}
endsnippet

snippet inc1
include_once '${1:file}';${2}
endsnippet

snippet req
require '${1:file}';${2}
endsnippet

snippet req1
require_once '${1:file}';${2}
endsnippet

snippet globals
$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
endsnippet

snippet $_ "COOKIE['...']"
$_COOKIE['${1:variable}']${2}
endsnippet

snippet $_ "ENV['...']"
$_ENV['${1:variable}']${2}
endsnippet

snippet $_ "FILES['...']"
$_FILES['${1:variable}']${2}
endsnippet

snippet $_ "GET['...']"
$_GET['${1:variable}']${2}
endsnippet

snippet $_ "POST['...']"
$_POST['${1:variable}']${2}
endsnippet

snippet $_ "REQUEST['...']"
$_REQUEST['${1:variable}']${2}
endsnippet

snippet $_ "SERVER['...']"
$_SERVER['${1:variable}']${2}
endsnippet

snippet $_ "SESSION['...']"
$_SESSION['${1:variable}']${2}
endsnippet

snippet /*
/**
 * ${1}
 **/
endsnippet

snippet doc_cp
/**
 * ${1:undocumented class}
 *
 * @package ${2:default}
 * @author ${3:`g:snips_author`}
**/${4}
endsnippet

snippet doc_vp
/**
 * ${1:undocumented class variable}
 *
 * @var ${2:string}
 **/${3}
endsnippet

snippet doc_v
/**
 * ${3:undocumented class variable}
 *
 * @var ${4:string}
 **/
${1:var} $${2};${5}
endsnippet

snippet doc_c
/**
 * ${3:undocumented class}
 *
 * @packaged ${4:default}
 * @author ${5:`!v g:snips_author`}
 **/
${1:}class ${2:}
{${6}
} // END $1class $2
endsnippet

snippet doc_dp
/**
 * ${1:undocumented constant}
 **/${2}
endsnippet

snippet doc_d
/**
 * ${3:undocumented constant}
 **/
define(${1}, ${2});${4}
endsnippet

snippet doc_fp
/**
 * ${1:undocumented function}
 *
 * @return ${2:void}
 * @author ${3:`g:snips_author`}
 **/${4}
endsnippet

snippet doc_s
/**
 * ${4:undocumented function}
 *
 * @return ${5:void}
 * @author ${6:`g:snips_author`}
 **/
${1}function ${2}(${3});${7}
endsnippet

snippet doc_h
/**
 * ${1}
 *
 * @author ${2:`g:snips_author`}
 * @version ${3:$Id$}
 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
 * @package ${5:default}
 **/

/**
 * Define DocBlock
 *//
endsnippet

snippet doc_i
/**
 * ${2:undocumented class}
 *
 * @package ${3:default}
 * @author ${4:`g:snips_author`}
 **/
interface ${1:}
{${5}
} // END interface $1
endsnippet

snippet class
/**
 * ${1}
 **/
class ${2:ClassName}
{
  ${3}
  function ${4:__construct}(${5:argument})
  {
    ${6:// code...}
  }
}
endsnippet

snippet def
define('${1}'${2});${3}
endsnippet

snippet def?
${1}defined('${2}')${3}
endsnippet

snippet wh
while (${1:/* condition */}) 
{
  ${2:// code...}
}
endsnippet

snippet do
do 
{
  ${2:// code... }
} while (${1:/* condition */});
endsnippet

snippet if
if (${1:/* condition */}) 
{
  ${2:// code...}
}
endsnippet

snippet ife
if (${1:/* condition */}) 
{
  ${2:// code...}
} 
else 
{
  ${3:// code...}
}
${4}
endsnippet

snippet else
else 
{
  ${1:// code...}
}
endsnippet

snippet elseif
elseif (${1:/* condition */}) 
{
  ${2:// code...}
}
endsnippet

snippet t
$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
endsnippet

snippet switch
switch ($${1:variable}) 
{
  case '${2:value}':
    ${3:// code...}
    break;
  ${5}
  default:
    ${4:// code...}
    break;
}
endsnippet

snippet case
case '${1:value}':
  ${2:// code...}
  break;${3}
endsnippet

snippet foreach
foreach ($${1:variable} as $${2:key}) 
{
  ${3:// code...}
}
endsnippet

snippet fun
${1:public }function ${2:FunctionName}(${3})
{
  ${4:// code...}
}
endsnippet

snippet array
$${1:arrayName} = array('${2}' => ${3});${4}

endsnippet

snippet ERR
error_log(__LINE__.':'.__FILE__.' '${VISUAL}$0); // hf@bellcom.dk debugging
endsnippet

snippet ERRP
error_log(__LINE__.':'.__FILE__.' '.print_r(${VISUAL}$0,1)); // hf@bellcom.dk debugging
endsnippet

snippet ISBC
if ( $_SERVER['REMOTE_ADDR'] == '90.185.206.100' )
{
  ${1}
}
endsnippet

snippet ISHOME
if ( $_SERVER['REMOTE_ADDR'] == '87.104.49.70' )
{
  ${1}
}
endsnippet

snippet hf
// hf@bellcom.dk, `!v strftime('%d-%b-%Y')`: ${1:} -->>
${2}
// <<-- hf@bellcom.dk, `!v strftime('%d-%b-%Y')`: $1
endsnippet

snippet while
while (${1:/* condition */}) 
{
  ${2:// code...}
}

endsnippet

snippet pattern "singleton"
class singleton
{
  private static $instance = null;
  
  private function __construct() {}
  
  public static function getInstance()
  {
    if ( self::$instance === null )
    {
      self::$instance = new self;
    }
  
  return self::$instance;
  }
}

endsnippet

snippet header "location"
header('Location: http://${1:www.example.com}/');

endsnippet

snippet header "content"
header('Content-Type: ${1:text/html}; charset=${2:UTF-8}');

endsnippet

snippet try  
try
{
  ${1}
}
catch (Exception ${2:$e})
{
  ${3}
}

endsnippet

snippet SELECT
SELECT ${1} FROM ${2} WHERE ${3}
endsnippet

snippet xdb
xdebug_break();
endsnippet

snippet @param
@param ${1:string} ${2:name} ${3:desc}
endsnippet
